{"version":3,"sources":["webpack://CoveoForZendeskAgent/webpack/universalModuleDefinition","webpack://CoveoForZendeskAgent/webpack/bootstrap","webpack://CoveoForZendeskAgent/external \"Coveo\"","webpack://CoveoForZendeskAgent/./src/zendesk/ZendeskClient/ZendeskClient.ts","webpack://CoveoForZendeskAgent/./node_modules/coveo-search-ui-extensions/bin/es6/rest/UserProfilingEndpoint.js","webpack://CoveoForZendeskAgent/./node_modules/coveo-search-ui-extensions/bin/es6/models/UserProfileModel.js","webpack://CoveoForZendeskAgent/./src/utils/InitializationHandler.ts","webpack://CoveoForZendeskAgent/./src/components/InsightPanel/InsightPanel.ts","webpack://CoveoForZendeskAgent/./src/components/TopBar/TopBar.ts","webpack://CoveoForZendeskAgent/./src/CoveoForZendesk.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ZendeskClient","this","client","ZAFClient","init","metadata","getClient","settings","zendeskFields","customFields","ticketFields","filter","field","type","map","label","standardFields","request","url","dataType","ticket_fields","title","concat","Promise","resolve","UserActionType","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","then","apply","options","exists","accessToken","organization","uri","DEFAULT_URI","subscribeToRenewal","buildEndpointCaller","token","caller","userId","response","method","queryString","responseType","requestDataType","requestData","objectId","errorsAsSuccess","isResponseEmpty","Error","JSON","stringify","parseResponse","data","v","time","parseInt","parse","Array","isArray","length","UserAction","timestamp","raw","document","query","element","super","ID","isNotUndefined","restUri","organizationId","searchEndpoint","getOrFetchCache","endpoint","actions","fetchActions","set","MODEL_CONFIG","undefined","getActions","parseGetActionsResponse","doFetch","userActions","buildUserActions","registerNewAttribute","urihashes","advancedExpression","addFieldExpression","x","numberOfResults","search","build","results","reduce","acc","assign","urihash","documents","isClick","action","uri_hash","index","list","indexOf","fetchDocuments","error","logger","ERROR_MESSAGE","FETCH_CLICKED_DOCUMENT_FAIL","Date","isClickOrView","isSearch","query_expression","Click","PageView","Search","freeze","customAttribute","silent","zendeskClient","caseCreatedBy","getSettings","Coveo","SearchEndpoint","endpoints","endpointUrl","searchToken","queryStringArguments","renewAccessToken","currentLocation","location","href","pathname","hash","searchInterfaceOptions","Analytics","searchHub","product","default","UserActions","autoTriggerQuery","SearchInterface","initializeSearchInterfaceWithUserActions","flattenFields","prefix","fieldValues","keys","fieldName","fieldValue","prefixedFieldName","fieldType","executeQuery","_","throttle","logSearchEvent","el","ticketContext","fieldString","split","fieldNames","whiteList","parseFieldList","insightPanelFieldsAllowlist","blackList","insightPanelFieldsBlocklist","some","whiteFieldName","RegExp","test","blackFieldName","fieldsMetadata","getTicketFields","renamedFieldValues","forEach","filteredFields","filterFields","join","outerHeight","requesterEmail","_this","$$","on","args","queryBuilder","addContext","tagViewsOfUser","topBarClient","trigger","getTicketContext","setTicketContext","instancesData","instances","guid","instanceGuid","instance","requester","email","enableUserActions","bindZendeskEvents","initializationHandler","getRequesterEmail","bindCoveoEvents","initializeSearchInterface","invoke","width","height","computeHeight","insightPanelClient","querySelector"],"mappings":"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","file":"CoveoForZendesk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Coveo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Coveo\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CoveoForZendeskAgent\"] = factory(require(\"Coveo\"));\n\telse\n\t\troot[\"CoveoForZendeskAgent\"] = factory(root[\"Coveo\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/commonjs\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { ZendeskField, ZendeskAPIField } from 'zaf';\nexport class ZendeskClient {\n    private client: any\n    private metadata: any\n    private zendeskFields: ZendeskField[]\n\n    constructor() {}\n\n    public getClient() {\n        if (!this.client)\n            this.client = ZAFClient.init();\n        return this.client;\n    }\n\n    public async getSettings() {\n        if(!this.metadata)\n            this.metadata = await this.getClient().metadata();\n        return this.metadata.settings;\n    }\n\n    public async getTicketFields(): Promise<ZendeskField[]> {\n        if (!this.zendeskFields) {\n            var allFieldsRequest = {\n                url: '/api/v2/ticket_fields.json',\n                type: 'GET',\n                dataType: 'json'\n            }\n            //For some ludicrous reason, it's impossible to retreive all the fields\n            //with one call. Plus, the rest call doesn't tell us which fields are custom\n            //So we do that little song and dance to make this work\n            var customFields = (<ZendeskAPIField[]> (await this.getClient().get('ticketFields')).ticketFields).filter(field => {\n                return field.type != \"built-in\";\n            }).map(field => {\n                return {\n                    name: `customField:${field.name}`,\n                    label: field.label ? field.label : field.name\n                }\n            })\n            var standardFields = (<ZendeskAPIField[]> (await this.getClient().request(allFieldsRequest)).ticket_fields).map(field => {\n                return {\n                    name: field.type,\n                    label: field.title\n                }\n            })\n            this.zendeskFields = standardFields.concat(customFields)\n        }\n        return Promise.resolve(this.zendeskFields)\n    }\n\n}\n\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { EndpointCaller, Assert } from 'coveo-search-ui';\n/**\n * User Actions posible type.\n */\nexport var UserActionType;\n(function (UserActionType) {\n    UserActionType[\"Search\"] = \"SEARCH\";\n    UserActionType[\"Click\"] = \"CLICK\";\n    UserActionType[\"PageView\"] = \"VIEW\";\n    UserActionType[\"Custom\"] = \"CUSTOM\";\n})(UserActionType || (UserActionType = {}));\n/**\n * Class that handle interaction with the endpoint.\n */\nexport class UserProfilingEndpoint {\n    /**\n     * Create a `UserProfilingEndpoint` instance.\n     * Create [`EndpointCaller`]{@link EndpointCaller} instance and uses it to communicate with the endpoint internally.\n     *\n     * @param options The options to initialize the component.\n     */\n    constructor(options) {\n        this.options = options;\n        Assert.exists(this.options.accessToken);\n        Assert.exists(this.options.organization);\n        this.options.uri = this.options.uri ? this.options.uri : UserProfilingEndpoint.DEFAULT_URI;\n        this.options.accessToken.subscribeToRenewal(this.buildEndpointCaller.bind(this));\n        this.buildEndpointCaller(this.options.accessToken.token);\n    }\n    buildEndpointCaller(token) {\n        this.caller = new EndpointCaller({ accessToken: token });\n    }\n    /**\n     * Get the list of actions a user has performed.\n     *\n     * @param userId Id from which action history will be retrieve. (either visitId or user email).\n     */\n    getActions(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            Assert.exists(userId);\n            const response = yield this.caller.call({\n                method: 'POST',\n                url: `${this.options.uri}/rest/organizations/${this.options.organization}/machinelearning/user/actions`,\n                queryString: [],\n                responseType: 'json',\n                requestDataType: 'application/json',\n                requestData: { objectId: userId },\n                errorsAsSuccess: false\n            });\n            if (this.isResponseEmpty(response)) {\n                throw new Error(`Response has no values: ${JSON.stringify(response)}`);\n            }\n            return this.parseResponse(response.data);\n        });\n    }\n    parseResponse(response) {\n        return response.value.map(v => {\n            return {\n                time: parseInt(v.time),\n                value: JSON.parse(v.value),\n                name: v.name\n            };\n        });\n    }\n    isResponseEmpty(response) {\n        return !response || !response.data || !response.data.value || !Array.isArray(response.data.value) || !(response.data.value.length > 0);\n    }\n}\n/**\n * Default platform uri.\n */\nUserProfilingEndpoint.DEFAULT_URI = 'https://platform.cloud.coveo.com';\n//# sourceMappingURL=UserProfilingEndpoint.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Model, QueryBuilder, Assert } from 'coveo-search-ui';\nimport { UserProfilingEndpoint, UserActionType } from '../rest/UserProfilingEndpoint';\n/**\n * Represent an action that a user has made.\n */\nexport class UserAction {\n    constructor(type, timestamp, raw, document, query) {\n        this.type = type;\n        this.timestamp = timestamp;\n        this.raw = raw;\n        this.document = document;\n        this.query = query;\n    }\n}\n/**\n * Model that store each user profile informations such as actions made by them,\n */\nexport class UserProfileModel extends Model {\n    /**\n     * Create a `UserProfileModel` and bound it to `element`.\n     * Also create a `UserProfilingEndpoint` that will be use to fetch actions made by a user.\n     *\n     * @param element An element on which the model will be bound on.\n     * @param options A set of options necessary for the component creation.\n     */\n    constructor(element, options) {\n        super(element, UserProfileModel.ID, {});\n        this.options = options;\n        Assert.isNotUndefined(this.options.restUri);\n        Assert.isNotUndefined(this.options.organizationId);\n        Assert.isNotUndefined(this.options.searchEndpoint);\n        this.getOrFetchCache = {};\n        this.endpoint = new UserProfilingEndpoint({\n            uri: this.options.restUri,\n            accessToken: this.options.accessToken || this.options.searchEndpoint.accessToken,\n            organization: this.options.organizationId\n        });\n    }\n    /**\n     * Get all actions related to a user.\n     *\n     * @param userId The identifier of a user.\n     */\n    getActions(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let actions = this.get(userId);\n            actions = Array.isArray(actions) ? actions : yield this.fetchActions(userId);\n            this.set(userId, actions, UserProfileModel.MODEL_CONFIG);\n            return actions;\n        });\n    }\n    /**\n     * Delete all actions related to a user from the model.\n     *\n     * @param userId The identifier of a user.\n     */\n    deleteActions(userId) {\n        this.set(userId, undefined, UserProfileModel.MODEL_CONFIG);\n        this.getOrFetchCache[userId] = undefined;\n    }\n    fetchActions(userId) {\n        const pendingFetch = this.getOrFetchCache[userId];\n        const doFetch = () => {\n            this.getOrFetchCache[userId] = this.endpoint.getActions(userId).then(actions => this.parseGetActionsResponse(userId, actions));\n            return this.getOrFetchCache[userId];\n        };\n        return pendingFetch || doFetch();\n    }\n    parseGetActionsResponse(userId, actions) {\n        const userActions = this.buildUserActions(actions);\n        this.registerNewAttribute(userId, userActions);\n        return userActions;\n    }\n    fetchDocuments(urihashes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (urihashes.length === 0) {\n                return Promise.resolve({});\n            }\n            const query = new QueryBuilder();\n            query.advancedExpression.addFieldExpression('@urihash', '==', urihashes.filter(x => x));\n            // Ensure we fetch the good amount of document.\n            query.numberOfResults = urihashes.length;\n            // Here we directly use the Search Endpoint to query without side effects.\n            const searchRequest = yield this.options.searchEndpoint.search(query.build());\n            const documentsDict = searchRequest.results.reduce((acc, result) => (Object.assign(Object.assign({}, acc), { [result.raw.urihash]: result })), {});\n            return documentsDict;\n        });\n    }\n    buildUserActions(actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let documents = {};\n            const urihashes = actions\n                .filter(this.isClick)\n                .map(action => action.value.uri_hash)\n                // Remove duplicates.\n                .filter((value, index, list) => list.indexOf(value) === index);\n            try {\n                documents = yield this.fetchDocuments(urihashes);\n            }\n            catch (error) {\n                this.logger.error(UserProfileModel.ERROR_MESSAGE.FETCH_CLICKED_DOCUMENT_FAIL, error);\n            }\n            return actions.map(action => {\n                return new UserAction(action.name, new Date(action.time), action.value, this.isClickOrView(action) ? documents[action.value.uri_hash] : undefined, this.isSearch(action) ? action.value.query_expression : undefined);\n            });\n        });\n    }\n    isClick(action) {\n        return action.name === UserActionType.Click;\n    }\n    isClickOrView(action) {\n        return this.isClick(action) || action.name === UserActionType.PageView;\n    }\n    isSearch(action) {\n        return action.name === UserActionType.Search;\n    }\n}\n/**\n * Identifier of the Search-UI component.\n */\nUserProfileModel.ID = 'UserProfileModel';\nUserProfileModel.ERROR_MESSAGE = Object.freeze({\n    FETCH_CLICKED_DOCUMENT_FAIL: 'Fetching clicked documents details failed'\n});\nUserProfileModel.MODEL_CONFIG = {\n    customAttribute: true,\n    silent: true\n};\n/**\n * Expose the UserProfileModel so a user action implementation can use it.\n */\nwindow['Coveo'] && (window['Coveo']['UserProfileModel'] = UserProfileModel);\n//# sourceMappingURL=UserProfileModel.js.map","import { ZendeskClient } from \"../zendesk/ZendeskClient/ZendeskClient\";\nimport { ZendeskOptions } from \"../models/ZendeskOptions\";\nimport {} from \"coveo-search-ui\"\nimport {UserProfileModel} from \"coveo-search-ui-extensions\"\n\nexport class InitializationHandler {\n    private client: ZendeskClient\n\n    constructor(public zendeskClient:ZendeskClient) {\n        this.client = zendeskClient;\n    }\n\n    public async initializeSearchInterfaceWithUserActions(root:HTMLElement, options: ZendeskOptions, caseCreatedBy: string) {\n        var settings = await this.client.getSettings()\n        Coveo.SearchEndpoint.endpoints['default'] = new Coveo.SearchEndpoint({\n            restUri: options.endpointUrl + '/rest/search',\n            accessToken: options.searchToken,\n            queryStringArguments: {\n                organizationId: settings.organizationId\n            },\n            renewAccessToken: () => {\n                var currentLocation = window.location\n                window.location.href = currentLocation.pathname + currentLocation.hash\n                return Promise.resolve(\"\");\n            }\n        });\n        var searchInterfaceOptions:any = {\n            Analytics: {\n                searchHub: 'zd_' + options.product + '_' + options.location\n            }\n        }\n        if(caseCreatedBy) {\n            new UserProfileModel(root, {\n                searchEndpoint: Coveo.SearchEndpoint.endpoints.default,\n                organizationId: settings.organizationId,\n                restUri: options.endpointUrl\n            });\n            searchInterfaceOptions.UserActions = {\n                userId: caseCreatedBy,\n            }\n        }\n        if(options.autoTriggerQuery === false) {\n            searchInterfaceOptions.SearchInterface = {\n                autoTriggerQuery: false\n            }\n        }\n        Coveo.init(root, searchInterfaceOptions);\n    }\n\n    public async initializeSearchInterface(root:HTMLElement, options: ZendeskOptions) {\n        this.initializeSearchInterfaceWithUserActions(root, options, null);\n    }\n\n}\n\n","import './Strings';\nimport { ZendeskField } from 'zaf';\nimport { ZendeskOptions } from '../../models/ZendeskOptions';\nimport { ZendeskClient } from '../../zendesk/ZendeskClient/ZendeskClient';\nimport { InitializationHandler } from '../../utils/InitializationHandler';\nimport { Dom, IBuildingQueryEventArgs } from 'coveo-search-ui';\n/**\n * The AttachResult component allows a user to link a search result to something else in their external\n * system, for instance a case, incident, request, etc.\n */\nexport class InsightPanel {\n\n    private ticketContext: {[key: string]: string};\n    private topBarClient: any;\n    private root: Dom;\n\n    constructor(\n        element: HTMLElement,\n        public options: ZendeskOptions,\n        public zendeskClient: ZendeskClient\n    ) {\n        this.root = new Dom(element)\n    }\n\n    // Explode objects to flatten the metadata\n    private flattenFields = function(prefix: string, fieldValues: {[key: string]: string}): {[key: string]: string} {\n        var finalMap:{[key: string]: string} = {};\n        if(!fieldValues) return finalMap;\n        return Object.keys(fieldValues)\n              .filter(fieldName => fieldName != \"errors\")\n              .reduce((result:{[key: string]: string}, fieldName:string) => {\n                  var fieldValue:string = fieldValues[fieldName];\n                  var prefixedFieldName = prefix == '' ? fieldName : prefix + '.' + fieldName;\n                  var fieldType = typeof fieldValue;\n                  if(fieldType == \"object\") {\n                      Object.assign(result, this.flattenFields(prefixedFieldName, fieldValue));\n                  } else if(fieldType == \"string\" || fieldType == \"boolean\" || fieldType == \"number\"){\n                    result[prefixedFieldName] = fieldValue;\n                  }\n                  return result;\n              }, {});\n    }\n\n    private parseFieldList(fieldString: string): string[] {\n        if (fieldString) {\n            return fieldString.split(';');\n        }\n        return [];\n    }\n\n    private async filterFields(flattenFields: {[key: string]: string}): Promise<{[key: string]: string}> {\n        var fieldNames = Object.keys(flattenFields);\n\n        var settings = await this.zendeskClient.getSettings();\n        //For all you snowflakes out there\n        var whiteList = this.parseFieldList(settings.insightPanelFieldsAllowlist);\n        var blackList = this.parseFieldList(settings.insightPanelFieldsBlocklist);\n\n        return fieldNames.filter(fieldName => (whiteList.length == 0 || whiteList.some(whiteFieldName => new RegExp(whiteFieldName).test(fieldName))))\n                         .filter(fieldName => (!blackList.some(blackFieldName => new RegExp(blackFieldName).test(fieldName))))\n                         .reduce((result:{[key: string]: string}, fieldName: string) => {\n                             result[fieldName] = flattenFields[fieldName];\n                             return result;\n                         }, {});\n    }\n\n    private async getTicketContext(): Promise<{[key: string]: string}> {\n        var fieldsMetadata:ZendeskField[] = await this.zendeskClient.getTicketFields()\n        var ticket_fields = fieldsMetadata.map(field => {\n          return `ticket.${field.name}`;\n        })\n    \n        var fieldValues = await this.zendeskClient.getClient().get(ticket_fields);\n        var renamedFieldValues:{[key: string]: string} = {};\n        fieldsMetadata.forEach(field => {\n            renamedFieldValues[`ticket.${field.label}`] = fieldValues[`ticket.${field.name}`];\n        });\n\n        var filteredFields = await this.filterFields(this.flattenFields('', renamedFieldValues));\n        //Dots aren't supported in context values, so we are replacing them with underscores\n        var replacedDots = Object.keys(filteredFields).reduce((result:{[key: string]: string}, key:string) => {\n            result[key.split('.').join('_')] = filteredFields[key];\n            return result;\n        },{});\n        return replacedDots;\n    }\n\n    private computeHeight(): string {\n        var windowHeight = window.outerHeight;\n        return windowHeight/2 + 'px';\n    }\n\n    private executeQuery = _.throttle(()=> {\n            Coveo.logSearchEvent(this.root.el, { name: 'CaseInputChange', type: 'Search' }, this.ticketContext);\n            Coveo.executeQuery(this.root.el);\n    }, 2000);\n\n    private async bindCoveoEvents(requesterEmail: string) {\n        var _this = this;\n        Coveo.$$(this.root).on('buildingQuery', function(e: Event, args:IBuildingQueryEventArgs) {\n            args.queryBuilder.addContext(_this.ticketContext)\n            if (requesterEmail) {\n                args.queryBuilder.userActions = { tagViewsOfUser: requesterEmail };\n            }\n        });\n    }\n\n    private setTicketContext(ticketContext: {[key: string]: string}) {\n        this.ticketContext = ticketContext;\n        if (this.topBarClient) {\n            this.topBarClient.trigger('ticket_context_updated', this.ticketContext);\n        }\n    }\n\n    private async bindZendeskEvents() {\n        this.zendeskClient.getClient().on('*.changed', (e:Event) => {\n            this.getTicketContext().then((ticketContext) => {\n                this.setTicketContext(ticketContext);\n                this.executeQuery();\n            })\n        });\n\n        this.zendeskClient.getClient().get('instances').then((instancesData: any) => {\n            var instances = instancesData.instances;\n            var guid = Object.keys(instances).filter((instanceGuid: any) => {\n                return instances[instanceGuid].location == 'top_bar';\n            }).join('');\n            return this.zendeskClient.getClient().instance(guid);\n        }).then((topBarClient:any) => {\n            this.topBarClient = topBarClient;\n        });\n\n        this.zendeskClient.getClient().on('top_bar_loaded', () => {\n            this.setTicketContext(this.ticketContext);\n        })\n    }\n\n    private async getRequesterEmail():Promise<string> {\n        var requester =  await this.zendeskClient.getClient().get('ticket.requester');\n        if(requester['ticket.requester']) {\n            return requester['ticket.requester'].email\n        }\n        return undefined;\n    }\n\n    public async init(enableUserActions: boolean) {\n        this.setTicketContext(await this.getTicketContext());\n        this.bindZendeskEvents();\n        var initializationHandler = new InitializationHandler(this.zendeskClient);\n        var requesterEmail = await this.getRequesterEmail();\n        if (enableUserActions && requesterEmail) {\n            this.bindCoveoEvents(requesterEmail);\n            initializationHandler.initializeSearchInterfaceWithUserActions(this.root.el, this.options, requesterEmail);\n        } else {\n            this.bindCoveoEvents(null);\n            initializationHandler.initializeSearchInterface(this.root.el, this.options)\n        }\n\n        this.zendeskClient.getClient().invoke('resize', { width: '100%', height: this.computeHeight() });\n    }\n\n}\n","import './Strings';\nimport { ZendeskOptions } from '../../models/ZendeskOptions';\nimport { ZendeskClient } from '../../zendesk/ZendeskClient/ZendeskClient';\nimport { InitializationHandler } from '../../utils/InitializationHandler';\nimport { Dom, IBuildingQueryEventArgs } from 'coveo-search-ui';\n/**\n * The AttachResult component allows a user to link a search result to something else in their external\n * system, for instance a case, incident, request, etc.\n */\nexport class TopBar {\n\n    private ticketContext: {[key: string]: string};\n    private root: Dom;\n\n    constructor(\n        element: HTMLElement,\n        public options: ZendeskOptions,\n        public zendeskClient: ZendeskClient\n    ) {\n        this.root = new Dom(element)\n    }\n\n    private executeQuery = _.throttle(()=> {\n        Coveo.logSearchEvent(this.root.el, { name: 'CaseInputChange', type: 'Search' }, this.ticketContext);\n        Coveo.executeQuery(this.root.el);\n    }, 2000);\n\n    private async bindCoveoEvents() {\n        var _this = this;\n        Coveo.$$(this.root).on('buildingQuery', function(e: Event, args:IBuildingQueryEventArgs) {\n            args.queryBuilder.addContext(_this.ticketContext)\n        });\n    }\n\n    private setTicketContext(ticketContext: {[key: string]: string}) {\n        this.ticketContext = ticketContext;\n    }\n\n    private async bindZendeskEvents() {\n        var _this = this;\n        this.zendeskClient.getClient().on('ticket_context_updated', (ticketContext: {[key: string]: string}) => {\n            debugger;\n            _this.setTicketContext(ticketContext)\n            _this.executeQuery();\n        });\n\n        this.zendeskClient.getClient().get('instances').then((instancesData: any) => {\n            var instances = instancesData.instances;\n            var guid = Object.keys(instances).filter((instanceGuid: any) => {\n                return instances[instanceGuid].location.indexOf('ticket_sidebar') >= 0;\n            }).join('');\n            return this.zendeskClient.getClient().instance(guid);\n        }).then((insightPanelClient:any) => {\n            insightPanelClient.trigger('top_bar_loaded');\n        });\n    }\n\n    public async init() {\n        this.bindCoveoEvents();\n        this.bindZendeskEvents();\n        this.options.autoTriggerQuery = true; //TODO: This is not ideal since we trigger 2 queries in some cases .. Could be improved\n        var initializationHandler = new InitializationHandler(this.zendeskClient);\n        initializationHandler.initializeSearchInterface(this.root.el, this.options)\n\n        this.zendeskClient.getClient().invoke('resize', { width: '1000px', height: '500px' });\n    }\n\n}\n","import { ZendeskOptions } from \"./models/ZendeskOptions\";\nimport { InsightPanel } from \"./components/InsightPanel/InsightPanel\";\nimport { ZendeskClient } from \"./zendesk/ZendeskClient/ZendeskClient\";\nimport { TopBar } from \"./components/TopBar/TopBar\";\n\n\nexport function init(options: ZendeskOptions) {\n    var root = <HTMLElement>document.querySelector(\"#search\");\n\n    if (options.product == \"support\" && options.location.indexOf(\"ticket_sidebar\") >= 0) {\n        new InsightPanel(root, options, new ZendeskClient()).init(options.location != \"new_ticket_sidebar\");\n    } else if (options.product == \"support\" && options.location == \"top_bar\") {\n        new TopBar(root, options, new ZendeskClient()).init();\n    }\n}"],"sourceRoot":""}